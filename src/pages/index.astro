---
import Layout from '@/layouts/Layout.astro'
import { Image } from 'astro:assets'
import { ModeToggle } from '@/components/ModeToggle'
import Footer from '@/components/Footer.astro'
import { buttonVariants } from '@/components/ui/button'

import ProjectCard from '@/components/ProjectCard.astro'
import Thronocrigger from '@/components/Thronocrigger.astro'

import laravel from '@/assets/technologies/laravel.svg'
import typescript from '@/assets/technologies/typescript.svg'
import svelte from '@/assets/technologies/svelte.svg'
import react from '@/assets/technologies/react.svg'
import go from '@/assets/technologies/go.svg'
import terraform from '@/assets/technologies/terraform.svg'
import docker from '@/assets/technologies/docker.svg'

import me from '@/assets/images/me.jpg'
import samuelhebting from '@/assets/projects/samuel-hebting/logo.svg'
import samuelhebtingDark from '@/assets/projects/samuel-hebting/logo.png'
import reciple from '@/assets/projects/reciple/logo.gif'
import petitponey from '@/assets/projects/petit-poney/logo.png'
import remarqr from '@/assets/projects/remarqr/logo.svg'
import metapulse from '@/assets/projects/metapulse/logo.png'
import { TooltipComponent } from '@/components/TooltipComponent'
import TimelineDataEn from '@/components/TimelineDataEn'
---

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme')
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches
      ? 'dark'
      : 'light'
  }
  const isDark = getThemePreference() === 'dark'
  document.documentElement.classList[isDark ? 'add' : 'remove']('dark')

  if (typeof localStorage !== 'undefined') {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains('dark')
      localStorage.setItem('theme', isDark ? 'dark' : 'light')
    })
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ['class'],
    })
  }
</script>
<Layout title="Amine Rahmane | Home">
  <div
    class="fixed flex flex-row gap-2 justify-center items-center z-50 right-6 top-6">
    <a
      href="/fr"
      class={buttonVariants({ variant: 'outline', size: 'icon' })}>
      FR
    </a>
    <ModeToggle client:load />
  </div>
  <div class="flex flex-col w-full min-h-screen justify-between">
    <main class="container mx-auto flex flex-col gap-4 py-4 px-8">
      <div
        class="flex flex-col items-center md:text-start text-center md:items-stretch md:flex-row justify-center gap-8 md:gap-12 py-8">
        <Image
          src={me}
          alt="A photo of Amine Rahmane."
          class="rounded-full w-1/3 md:w-1/5 md:h-1/5"
        />
        <div class="flex flex-col gap-8 md:gap-0">
          <h1
            class="font-satoshi space-y-2 scroll-m-20 text-4xl font-extrabold tracking-tight lg:leading-tight lg:text-5xl">
            <span class="text-background bg-primary px-2 highlight"
              >Amine Rahmane,</span
            >
            developer and identity creator.
          </h1>

          <div
            class="flex flex-row flex-wrap flex-grow items-center justify-center gap-8">
            <TooltipComponent
              image={laravel}
              content="Laravel"
              style={{ animationDelay: '100ms' }}
              client:load
            />
            <TooltipComponent
              image={typescript}
              content="Typescript"
              style={{ animationDelay: '150ms' }}
              client:load
            />
            <TooltipComponent
              image={svelte}
              content="Svelte"
              style={{ animationDelay: '200ms' }}
              client:load
            />
            <TooltipComponent
              image={react}
              content="React"
              style={{ animationDelay: '250ms' }}
              client:load
            />
            <TooltipComponent
              image={go}
              content="Golang"
              style={{ animationDelay: '300ms' }}
              client:load
            />
            <TooltipComponent
              image={terraform}
              content="Terraform"
              style={{ animationDelay: '350ms' }}
              client:load
            />
            <TooltipComponent
              image={docker}
              content="Docker"
              style={{ animationDelay: '400ms' }}
              client:load
            />
          </div>
        </div>
      </div>
      <div
        class="space-y-4 fade-in-up"
        style="animation-delay: 300ms;">
        <h2
          class="scroll-m-20 bg-primary text-background px-4 border-b font-satoshi pb-2 text-3xl font-semibold tracking-tight first:mt-0">
          Projects.
        </h2>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-2">
          <ProjectCard
            title="Petit Poney Bar"
            project="Design and deployment"
            link="https://petitponey-bar.fr/"
            image={petitponey}
          />
          <Thronocrigger
            title="Thronocrigger"
            project="Portfolio redesign"
            link="https://thronocrigger.com"
          />
          <ProjectCard
            title="Samuel Hebting"
            project="Design and deployment"
            link="https://samuel-hebting.fr"
            image={samuelhebting}
            imageDark={samuelhebtingDark}
          />
          <ProjectCard
            title="Reciple"
            project="Wordle-like focused on food"
            link="https://reciple.net"
            image={reciple}
          />
          <ProjectCard
            title="Remarqr"
            project="Feedback. Reimagined."
            link="https://remarqr.dev"
            image={remarqr}
          />
          <ProjectCard
            title="Metapulse"
            project="OpenGraph tag generation."
            link="https://metapulse.amine-rahmane.fr"
            image={metapulse}
          />
        </div>
      </div>
      <div
        class="space-y-4 pt-8 fade-in-up"
        style="animation-delay: 300ms;">
        <h2
          class="scroll-m-20 bg-primary text-background px-4 border-b font-satoshi pb-2 text-3xl font-semibold tracking-tight first:mt-0">
          Experiences.
        </h2>
        <TimelineDataEn client:only />
      </div>
    </main>
    <Footer />
  </div>
</Layout>

<style>
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes highlight {
    from {
      color: hsl(var(--primary));
    }
    to {
      color: hsl(var(--primary-foreground));
      background-position: left;
    }
  }

  .highlight {
    padding: 0.02rem 0.4rem;
    animation: highlight 0.8s ease-out forwards;
    background: linear-gradient(
        to left,
        hsl(var(--primary-foreground)) 50%,
        hsl(var(--primary)) 50%
      )
      right;
    background-size: 200%;
  }

  .fade-in-up {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.4s ease-out forwards;
  }
</style>
