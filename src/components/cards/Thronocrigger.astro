---
import Card from '../Card.astro'
interface Props {
  title: string
  project: string
  cols?: number | string
  rows?: number | string
  link?: string
}

const { title, project, link } = Astro.props
---

<div class="card h-full w-full overflow-hidden">
  <Card title={title} project={project} link={link}>
    <div class="avatar"></div>
  </Card>
</div>

<style lang="scss">
  .avatar {
    position: relative;
    width: clamp(48px, 208px, 200px);
    height: clamp(48px, 208px, 200px);
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    background-image: url('../../assets/projects/thronocrigger/avatar.png');

    &::before,
    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      width: clamp(48px, 208px, 200px);
      height: clamp(48px, 208px, 200px);
      clip: rect(0, 0, 0, 0);
      overflow: hidden;
      background-size: cover;
      background-repeat: no-repeat;
      background-position: center;
    }
    &::before {
      left: -6px;
      background-image: url('../../assets/projects/thronocrigger/avatar-bg-1.png');
          animation: glitch-effect (random(5) + s) infinite linear alternate-reverse;
    }
    &::after {
      left: 6px;
      background-image: url('../../assets/projects/thronocrigger/avatar-bg-2.png');
          animation: glitch-effect (random(5) + s) infinite linear alternate-reverse;
    }
  }

  $steps: 17;
  @keyframes glitch-effect {
    @for $i from 0 through $steps {
      #{percentage($i*calc(1/$steps))} {
        clip: rect(random(180) + px, 400px, random(180) + px, 0);
      }
    }
  }
</style>
